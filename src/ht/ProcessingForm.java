/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ht;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

/**
 *
 * @author Manoj
 */
public class ProcessingForm extends javax.swing.JFrame {

    /**
     * Creates new form ProcessingForm
     */
    public ProcessingForm() {
        initComponents();
        this.setResizable(false);
        this.setBounds(250, 100, 918, 615);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ht/images/natural-language-processing-algorithms-fb-1.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 920, 590);

        jMenu1.setText("File");

        jMenuItem1.setText("Search For Ads");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("View Responses");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("StandFordSentimentAnalyser");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("HT Review Categorical Model");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("View Results");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 939, 665);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        try
        {
            FileInputStream fin=new FileInputStream("result.csv");
            DataInputStream din=new DataInputStream(fin);
            FileOutputStream fout=new FileOutputStream("SFResult.txt");
            PrintStream ps=new PrintStream(fout);
        ArrayList<String> tweets = new ArrayList<String>();
        String sg=din.readLine();
        while(sg!=null)
        {
          tweets.add(sg);
          sg=din.readLine();
        }
         //tweets.add("In this country, \"democracy\" means pro-government. #irony");
        NLP.init();
        for(String tweet : tweets) {
            int n=NLP.findSentiment(tweet);
            System.out.println(tweet + " : " +n );
            if(n==3)
            {
               ps.println(tweet+" "+"yes");
            }
            else if(n==2)
            {
             ps.println(tweet+" "+"no");
            }
            else if(n==1)
            {
             ps.println(tweet+" "+"no");
            }
            else
            {
             ps.println(tweet+" "+"no");
            }
            
        }
        
        ps.close();
        }
        catch(Exception ee)
        {
          System.out.println(ee);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        try
      {
          FileInputStream fin=new FileInputStream("HTresult.txt");
          DataInputStream din=new DataInputStream(fin);
          String sg=din.readLine();
          result.setText("");
          int nr=0;
          int re=0;
          while(sg!=null)
          {
            
            
            if(sg.endsWith("no"))
            {
              result.setText(result.getText()+"\n"+"NOT RELEVANT,"+"US"+","+"YES");
              nr++;
            }
            else
            {
              result.setText(result.getText()+"\n"+"RELEVANT,"+"US"+","+"NO");
              re++;
            }
            
            sg=din.readLine();
          }
      
           FileInputStream fin1=new FileInputStream("SFresult.txt");
          DataInputStream din1=new DataInputStream(fin);
          String sg1=din.readLine();
          while(sg1!=null)
          {
            
            
            if(sg1.endsWith("no"))
            {
              result.setText(result.getText()+"\n"+"NOT RELEVANT,"+"US"+","+"YES");
            }
            else
            {
              result.setText(result.getText()+"\n"+"RELEVANT,"+"US"+","+"NO");
            }
            sg1=din1.readLine();
          }
          
          try
          {
           System.out.println("nr "+nr+" re "+re);
            
      BarChartExample example=new BarChartExample("Bar Chart Window",nr,re);  
      example.setSize(800, 400);  
      example.setLocationRelativeTo(null);  
      example.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);  
      example.setVisible(true);  
    
          }
          catch(Exception ee)
          {
            System.out.println(ee);
          }
          
      }
      catch(Exception ee)
      {
        System.out.println(ee);
      }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        try{
		int count=0;
		String tweet;
	
		  ArrayList<String> stopwords= new ArrayList<String>();
		  BufferedReader stop = new BufferedReader(new FileReader("Data\\stopwords.txt"));
		  String line = "";
		  while ((line = stop.readLine()) != null)
		  {
			  stopwords.add(line);
		  }
		
		
		 Map<String, String> map = new HashMap<String, String>();
	        BufferedReader in = new BufferedReader(new FileReader("Data\\AFINN"));
	        
	        line="";
	        while ((line = in.readLine()) != null) {
	            String parts[] = line.split("\t");
	            map.put(parts[0], parts[1]);
	            count++;
	        }
	        in.close();
	     //   System.out.println(map.toString());
	   
		
		
		//Scanner inputStream= new Scanner(new FileReader("Data\\TestTweets.csv"));
                Scanner inputStream= new Scanner(new FileReader("result.csv"));
                FileOutputStream fout=new FileOutputStream("HTResult.txt");
                PrintStream ps=new PrintStream(fout);
		while(inputStream.hasNextLine())
		{
			float tweetscore=0;
		tweet= inputStream.nextLine();
		String[] word=tweet.split(" ");
		
		

			for(int i=0; i<word.length;i++)
			{
				if(stopwords.contains(word[i].toLowerCase()))
				{
					
				}
				else{
				if(map.get(word[i])!=null)
				{
				String wordscore= map.get(word[i].toLowerCase());
				tweetscore=(float) tweetscore + Integer.parseInt(wordscore);
			}}}
			Map<String, Float> sentiment= new HashMap<String, Float>();
                        
                        if(tweetscore>=2)
            {
               ps.println(tweet+" "+"yes");
            }
            else if(tweetscore>=1)
            {
             ps.println(tweet+" "+"no");
            }
            else if(tweetscore>=0)
            {
             ps.println(tweet+" "+"no");
            }
            else
            {
             ps.println(tweet+" "+"no");
            }
			sentiment.put(tweet, tweetscore);
			System.out.println(sentiment.toString()); 
		
					
		} 
		
		ps.close();
		
		

}
	catch(Exception e)
	{
		e.printStackTrace();
	
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        SearchForm sf=new SearchForm();
        sf.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ResponseForm rf=new ResponseForm();
        rf.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProcessingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea result;
    // End of variables declaration//GEN-END:variables
}
